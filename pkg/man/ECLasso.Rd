% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ECLasso.R
\name{ECLasso}
\alias{ECLasso}
\title{Function for solving constrained lasso.}
\usage{
ECLasso(
  x,
  y,
  censor = NULL,
  C = NULL,
  d = NULL,
  family = c("cox", "logistic"),
  penalty.factor = 1,
  depth = 15,
  tolerance = 1e-07,
  method = c("combined_subset", "admm_subset", "naive"),
  intercept = F,
  trace = F
)
}
\arguments{
\item{x}{The design matrix}

\item{y}{The response vector}

\item{censor}{If using a Cox model, the censoring vector}

\item{C}{The constraints that linearly combine the regression coefficients.}

\item{d}{The vector of values that C times the regression coefficients should equal}

\item{family}{The type of model. Note for now only logistic and Cox models are supported.}

\item{penalty.factor}{The penalization vector that multiplies the lasso penalty lambda e.g. elements = 1
are lasso penalized and elements = 0 are un-penalized}

\item{depth}{How many lambdas into the unconstrained sequence to solve for}

\item{tolerance}{Tolerance of ADMM, influences the primal and dual criteria for termination}

\item{method}{One of "combined_subset", "admm_subset", or "naive". The first two
implement our candidate subset approach, the former using a combined ADMM/Newton-Raphson algorithm
and the latter using ADMM only. The last solves the constrained lasso using ADMM only on the whole predictor space.}

\item{trace}{If false, returns solution path. If true, also returns run-time, subsets, and penalty sequence}
}
\description{
This function solves the constrained lasso using our candidate subset approach.
It is a wrapper for three fitting methods: combined candidate subset, ADMM-only candidate subset
and naive whole-predictor.
}
\keyword{ECLasso}
