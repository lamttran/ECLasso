% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NRfunctions.R
\name{NRfunctions}
\alias{NRfunctions}
\alias{grad_sign_fct}
\alias{hessian_fct}
\alias{NR_constrained}
\alias{NR_unconstrained}
\title{Unconstrained/constrained Newton-Raphson, with gradient and Hessian functions}
\usage{
grad_sign_fct(
  par_vec,
  xdata,
  lambda,
  censor = NULL,
  ydata = NULL,
  penalty.factor = 1,
  family = c("cox", "logistic")
)

hessian_fct(par_vec, xdata, censor = NULL, family = c("cox", "logistic"))

NR_constrained(
  par_vec,
  xdata,
  lambda,
  censor = NULL,
  ydata = NULL,
  C = NULL,
  penalty.factor = 1,
  tolerance = 1e-06,
  family = c("cox", "logistic")
)

NR_unconstrained(
  par_vec,
  xdata,
  lambda,
  censor = NULL,
  ydata = NULL,
  penalty.factor = 1,
  tolerance = 1e-06,
  family = c("cox", "logistic")
)
}
\arguments{
\item{par_vec}{numeric vector of regression coefficients}

\item{xdata}{design matrix}

\item{lambda}{lasso penalty}

\item{censor}{if using a Cox model, the censoring vector}

\item{ydata}{the response vector}

\item{penalty.factor}{The penalization vector that multiplies the lasso penalty lambda e.g. elements = 1
are lasso penalized and elements = 0 are unpenalized}

\item{family}{the type of model, one of Cox or logistic}

\item{tolerance}{If successive N-R iterations differ by less than this, terminate}
}
\description{
Unconstrained/constrained Newton-Raphson, with gradient and Hessian functions
}
